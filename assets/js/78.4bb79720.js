(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{424:function(e,t,a){"use strict";a.r(t);var n=a(9),o=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"mongodb-安装和配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-安装和配置"}},[e._v("#")]),e._v(" MongoDB 安装和配置")]),e._v(" "),t("h2",{attrs:{id:"基础概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[e._v("#")]),e._v(" 基础概念")]),e._v(" "),t("ul",[t("li",[e._v("MongoDB 元素概念\n"),t("ul",[t("li",[e._v("databases: 数据库;")]),e._v(" "),t("li",[e._v("collections:表；（collections组成了databases）")]),e._v(" "),t("li",[e._v("documents:行；（documents组成了collections）")])])]),e._v(" "),t("li",[e._v("MongoDB 没有新建数据库的命令，只要进行 insert 或其它操作，MongoDB 就会自动帮你建立数据库和 collection。当查询一个不存在的 collection 时也不会出错，MongoDB 会认为那是一个空的 collection。")]),e._v(" "),t("li",[e._v('一个对象被插入到数据库中时，如果它没有 ID，会自动生成一个 "_id" 字段，为 12 字节(24位)16进制数。')]),e._v(" "),t("li",[e._v("当然如果插入文档不带 _id，则系统会帮你自动创建一个，如果自己指定了就用自己指定的。")])]),e._v(" "),t("h2",{attrs:{id:"如果你用-spring-data-mongodb-依赖请注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果你用-spring-data-mongodb-依赖请注意"}},[e._v("#")]),e._v(" 如果你用 Spring Data MongoDB 依赖请注意")]),e._v(" "),t("ul",[t("li",[e._v("请先看官网最新支持到哪个版本的依赖："),t("a",{attrs:{href:"https://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#new-features",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#new-features"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("查看锚点为："),t("code",[e._v("What’s new in Spring Data MongoDB")]),e._v(" 的内容，比如：What’s new in Spring Data MongoDB 1.10，出现这样一句话："),t("code",[e._v("Compatible with MongoDB Server 3.4 and the MongoDB Java Driver 3.4")])])])]),e._v(" "),t("li",[e._v("目前 201712 支持 MongoDB 3.4")])]),e._v(" "),t("h2",{attrs:{id:"如果你用-robomongo-客户端请注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果你用-robomongo-客户端请注意"}},[e._v("#")]),e._v(" 如果你用 Robomongo 客户端请注意")]),e._v(" "),t("ul",[t("li",[e._v("请查看介绍中支持哪个版本："),t("a",{attrs:{href:"https://robomongo.org/download",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://robomongo.org/download"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("目前 201712 支持 MongoDB 3.4")])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"docker-下安装-mongodb-方式一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-下安装-mongodb-方式一"}},[e._v("#")]),e._v(" Docker 下安装 MongoDB（方式一）")]),e._v(" "),t("ul",[t("li",[e._v("先创建一个宿主机以后用来存放数据的目录："),t("code",[e._v("mkdir -p /data/docker/mongo/db")])]),e._v(" "),t("li",[e._v("赋权："),t("code",[e._v("chmod 777 -R /data/docker/mongo/db")])]),e._v(" "),t("li",[e._v("首次运行镜像："),t("code",[e._v("docker run --name cloud-mongo -p 27017:27017 -v /data/docker/mongo/db:/data/db -d mongo:3.4")])]),e._v(" "),t("li",[e._v("进入容器中 mongo shell 交互界面："),t("code",[e._v("docker exec -it cloud-mongo mongo adg_mongo_db")])]),e._v(" "),t("li",[e._v("创建一个用户：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('db.createUser(\n    {\n        user: "adguser",\n        pwd: "adg123456",\n        roles: [ \n            { role: "dbAdmin", db: "adg_mongo_db" },\n            { role: "readWrite", db: "adg_mongo_db" }\n        ]\n    }\n)\n')])])]),t("ul",[t("li",[e._v("然后停掉容器："),t("code",[e._v("docker stop cloud-mongo")])]),e._v(" "),t("li",[e._v("然后删除容器："),t("code",[e._v("docker rm cloud-mongo")])]),e._v(" "),t("li",[e._v("重新运行镜像，这次增加需要授权才能访问的配置："),t("code",[e._v("docker run -d -p 27017:27017 -v /data/docker/mongo/db:/data/db --restart always --name cloud-mongo mongo:3.4 --auth")])]),e._v(" "),t("li",[e._v("重新启动服务："),t("code",[e._v("docker restart cloud-mongo")])]),e._v(" "),t("li",[e._v("导出："),t("code",[e._v("docker exec -it cloud-mongo mongoexport -h 127.0.0.1 -u 用户名 -p 密码 -d 库名 -c 集合名 -o /data/db/mongodb.json --type json")])]),e._v(" "),t("li",[e._v("导入："),t("code",[e._v("docker exec -it cloud-mongo mongoimport -h 127.0.0.1 -u 用户名 -p 密码 -d 库名 -c 集合名 --file /data/db/mongodb.json --type json")])])]),e._v(" "),t("h2",{attrs:{id:"docker-下安装-mongodb-方式二"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-下安装-mongodb-方式二"}},[e._v("#")]),e._v(" Docker 下安装 MongoDB（方式二）")]),e._v(" "),t("ul",[t("li",[e._v("先创建一个宿主机以后用来存放数据的目录："),t("code",[e._v("mkdir -p /data/docker/mongo/db")])]),e._v(" "),t("li",[e._v("赋权："),t("code",[e._v("chmod 777 -R /data/docker/mongo/db")])]),e._v(" "),t("li",[e._v("运行镜像："),t("code",[e._v("docker run --name cloud-mongo2 -p 37017:27017 -v /data/docker/mongo/db:/data/db -d mongo:3.4 --auth")])]),e._v(" "),t("li",[e._v("进入容器中 mongo shell 交互界面："),t("code",[e._v("docker exec -it cloud-mongo2 mongo")])]),e._v(" "),t("li",[e._v("创建一个超级用户：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('use admin\n\ndb.createUser(\n    {\n        user: "mongo-admin",\n        pwd: "123456",\n        roles: [ \n            { role: "root", db: "admin" }\n        ]\n    }\n)\n\ndb.auth("mongo-admin","123456")\n')])])]),t("ul",[t("li",[e._v("使用 db.auth() 可以对数据库中的用户进行验证，如果验证成功则返回 1，否则返回 0")]),e._v(" "),t("li",[e._v("接着创建一个普通数据库和用户：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\nuse my_test_db\n\n\ndb.createUser(\n    {\n        user: "mytestuser",\n        pwd: "123456",\n        roles: [ \n            { role: "dbAdmin", db: "my_test_db" },\n            { role: "readWrite", db: "my_test_db" }\n        ]\n    }\n)\n\n\ndb.auth("mytestuser","123456")\n')])])]),t("hr"),e._v(" "),t("h2",{attrs:{id:"mongodb-传统方式安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-传统方式安装"}},[e._v("#")]),e._v(" MongoDB 传统方式安装")]),e._v(" "),t("ul",[t("li",[e._v("关闭 SELinux\n"),t("ul",[t("li",[e._v("编辑配置文件："),t("code",[e._v("vim /etc/selinux/config")])]),e._v(" "),t("li",[e._v("把 "),t("code",[e._v("SELINUX=enforcing")]),e._v(" 改为 "),t("code",[e._v("SELINUX=disabled")])])])]),e._v(" "),t("li",[e._v("MongoDB 资料\n"),t("ul",[t("li",[e._v("官网："),t("a",{attrs:{href:"https://www.mongodb.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.mongodb.com"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("官网文档："),t("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/method/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.mongodb.com/manual/reference/method/"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("此时（20170228） 最新稳定版本为："),t("strong",[e._v("3.4.2")])]),e._v(" "),t("li",[e._v("官网下载："),t("a",{attrs:{href:"https://www.mongodb.com/download-center?jmp=nav#community",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.mongodb.com/download-center?jmp=nav#community"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("官网安装方法介绍："),t("a",{attrs:{href:"https://docs.mongodb.com/master/tutorial/install-mongodb-on-red-hat",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.mongodb.com/master/tutorial/install-mongodb-on-red-hat"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("官网文档使用的 Package 的安装方式。还有一种安装方式是下载 tar 包的方法，如果需要 tar 包方式可以看这篇文章：\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://itjh.net/2016/07/11/centos-install-mongodb",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://itjh.net/2016/07/11/centos-install-mongodb"),t("OutboundLink")],1)])])])])])]),e._v(" "),t("h3",{attrs:{id:"yum-卸载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yum-卸载"}},[e._v("#")]),e._v(" yum 卸载")]),e._v(" "),t("ul",[t("li",[t("code",[e._v('yum remove "mongodb-org-*"')])])]),e._v(" "),t("h3",{attrs:{id:"_3-4-2-yum-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-yum-安装"}},[e._v("#")]),e._v(" 3.4.2 yum 安装")]),e._v(" "),t("ul",[t("li",[e._v("新建文件："),t("code",[e._v("vim /etc/yum.repos.d/mongodb-org-3.4.repo")]),e._v("，文件内容如下：")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mongodb-org-3.4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("MongoDB Repository\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("baseurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://repo.mongodb.org/yum/redhat/"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$releasever")]),e._v("/mongodb-org/3.4/x86_64/\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("gpgcheck")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("gpgkey")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://www.mongodb.org/static/pgp/server-3.4.asc\n")])])]),t("ul",[t("li",[e._v("如果你要安装 2.6 的版本，可以使用下面这个内容：")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mongodb-org-2.6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("MongoDB "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2.6")]),e._v(" Repository\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("baseurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("gpgcheck")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),t("ul",[t("li",[e._v("上面文件新建好之后，输入安装命令："),t("code",[e._v("yum install -y mongodb-org")]),e._v("，一共有 5 个包，加起来有 100M 左右，国内下载速度不快，需要等等，可能还会出错，如果出错用国内源："),t("a",{attrs:{href:"https://mirror.tuna.tsinghua.edu.cn/help/mongodb/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://mirror.tuna.tsinghua.edu.cn/help/mongodb/"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("开放防火墙端口：\n"),t("ul",[t("li",[t("code",[e._v("iptables -A INPUT -p tcp -m tcp --dport 27017 -j ACCEPT")])]),e._v(" "),t("li",[t("code",[e._v("service iptables save")])]),e._v(" "),t("li",[t("code",[e._v("service iptables restart")])])])])]),e._v(" "),t("h3",{attrs:{id:"_3-6-yum-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-yum-安装"}},[e._v("#")]),e._v(" 3.6 yum 安装：")]),e._v(" "),t("ul",[t("li",[e._v("新建文件："),t("code",[e._v("vim /etc/yum.repos.d/mongodb-org-3.6.repo")]),e._v("，文件内容如下：")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mongodb-org-3.6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("MongoDB Repository\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("baseurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://repo.mongodb.org/yum/redhat/"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$releasever")]),e._v("/mongodb-org/testing/x86_64/\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("gpgcheck")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("gpgkey")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://www.mongodb.org/static/pgp/server-3.6.asc\n")])])]),t("ul",[t("li",[e._v("上面文件新建好之后，输入安装命令："),t("code",[e._v("yum install -y mongodb-org")]),e._v("，一共有 5 个包，加起来有 100M 左右，国内下载速度不快，需要等等，可能还会出错，如果出错用国内源："),t("a",{attrs:{href:"https://mirror.tuna.tsinghua.edu.cn/help/mongodb/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://mirror.tuna.tsinghua.edu.cn/help/mongodb/"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("开放防火墙端口：\n"),t("ul",[t("li",[t("code",[e._v("iptables -A INPUT -p tcp -m tcp --dport 27017 -j ACCEPT")])]),e._v(" "),t("li",[t("code",[e._v("service iptables save")])]),e._v(" "),t("li",[t("code",[e._v("service iptables restart")])])])])]),e._v(" "),t("h3",{attrs:{id:"_3-4-10-tar-绿色安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-10-tar-绿色安装"}},[e._v("#")]),e._v(" 3.4.10 tar 绿色安装")]),e._v(" "),t("ul",[t("li",[e._v("下载："),t("code",[e._v("wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.4.10.tgz")])]),e._v(" "),t("li",[e._v("解压到指定目录，并重命名：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("tar zxvf mongodb-linux-x86_64-rhel62-3.4.10.gz\n\nmv mongodb-linux-x86_64-rhel62-3.4.10 mongodb\n\nmv mongodb /usr/program\n")])])]),t("ul",[t("li",[e._v("增加系统变量，我这里是用 zsh")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim ~/.zshrc \n\nexport MONGODB_HOME=/usr/program/mongodb\nexport PATH=$MONGODB_HOME/bin:$PATH\n\nsource ~/.zshrc\n")])])]),t("ul",[t("li",[e._v("测试是否安装成功："),t("code",[e._v("mongod -v")]),e._v("，安装成功会得到如下信息：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] MongoDB starting : pid=31155 port=27017 dbpath=/data/db 64-bit host=youmeek\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] db version v3.4.10\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] git version: 078f28920cb24de0dd479b5ea6c66c644f6326e9\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] allocator: tcmalloc\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] modules: none\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] build environment:\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten]     distmod: rhel62\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten]     distarch: x86_64\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten]     target_arch: x86_64\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] options: { systemLog: { verbosity: 1 } }\n2017-12-03T00:08:09.854+0800 D -        [initandlisten] User Assertion: 29:Data directory /data/db not found. src/mongo/db/service_context_d.cpp 98\n2017-12-03T00:08:09.854+0800 I STORAGE  [initandlisten] exception in initAndListen: 29 Data directory /data/db not found., terminating\n2017-12-03T00:08:09.854+0800 I NETWORK  [initandlisten] shutdown: going to close listening sockets...\n2017-12-03T00:08:09.854+0800 I NETWORK  [initandlisten] shutdown: going to flush diaglog...\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] now exiting\n2017-12-03T00:08:09.854+0800 I CONTROL  [initandlisten] shutting down with code:100\n")])])]),t("ul",[t("li",[e._v("创建数据库、日志存放目录：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mkdir -p /usr/program/mongodb/data\nmkdir -p /usr/program/mongodb/log\ntouch /usr/program/mongodb/log/mongodb.log\n")])])]),t("ul",[t("li",[e._v("创建配置文件："),t("code",[e._v("vim /etc/mongodb.conf")]),e._v("，并写入内容：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("dbpath=/usr/program/mongodb/data\nlogpath=/usr/program/mongodb/log/mongodb.log\nlogappend=true\nport=27017\nfork=true\n")])])]),t("ul",[t("li",[e._v("看下是否已经有 mongo 在运行，如果有就 kill 掉："),t("code",[e._v("ps -ef | grep mongo")])]),e._v(" "),t("li",[e._v("通过配置文件启动："),t("code",[e._v("mongod -f /etc/mongodb.conf")])]),e._v(" "),t("li",[e._v("显示下面信息则表示启动了：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("about to fork child process, waiting until server is ready for connections.\nforked process: 29167\nchild process started successfully, parent exiting\n")])])]),t("ul",[t("li",[e._v("进入 MongoDB 后台管理 Shell："),t("code",[e._v("cd /usr/program/mongodb/bin && ./mongo")])]),e._v(" "),t("li",[e._v("创建数据库：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("use youmeek\n")])])]),t("ul",[t("li",[e._v("创建用户，并授权，需要注意的是：dbAdmin 的权限是没有包含 readWrite，所以很多时候要根据需求添加多个权限：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('db.createUser(\n    {\n        user: "youmeek",\n        pwd: "youmeek123456",\n        roles: [ \n            { role: "dbAdmin", db: "youmeek" },\n            { role: "readWrite", db: "youmeek" }\n        ]\n    }\n)\n')])])]),t("ul",[t("li",[e._v("开放防火墙端口：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("iptables -A INPUT -p tcp -m tcp --dport 27017 -j ACCEPT\nservice iptables save\nservice iptables restart\n")])])]),t("ul",[t("li",[e._v("修改配置文件："),t("code",[e._v("vim /etc/mongodb.conf")]),e._v("，在文件最后面增加一行：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("auth=true\n")])])]),t("ul",[t("li",[e._v("表示开启用户认证，这样后面要连接 mongo 就必须输入数据库、用户名、密码。")]),e._v(" "),t("li",[e._v("然后重启 mongo，开始使用。")])]),e._v(" "),t("h2",{attrs:{id:"其他常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他常用命令"}},[e._v("#")]),e._v(" 其他常用命令：")]),e._v(" "),t("ul",[t("li",[e._v("检查版本："),t("code",[e._v("mongod --version")])]),e._v(" "),t("li",[e._v("启动："),t("code",[e._v("service mongod start")])]),e._v(" "),t("li",[e._v("停止："),t("code",[e._v("service mongod stop")])]),e._v(" "),t("li",[e._v("重启："),t("code",[e._v("service mongod restart")])]),e._v(" "),t("li",[e._v("添加自启动："),t("code",[e._v("chkconfig mongod on")])]),e._v(" "),t("li",[e._v("进入客户端："),t("code",[e._v("mongo")]),e._v("，如果有授权用户格式为："),t("code",[e._v("mongo 127.0.0.1:27017/admin -u 用户名 -p 用户密码")])]),e._v(" "),t("li",[e._v("卸载命令："),t("code",[e._v("yum erase $(rpm -qa | grep mongodb-org)")]),e._v(" "),t("ul",[t("li",[e._v("删除数据库："),t("code",[e._v("rm -r /var/lib/mongo")])]),e._v(" "),t("li",[e._v("删除 log："),t("code",[e._v("rm -r /var/log/mongodb")])])])])]),e._v(" "),t("h2",{attrs:{id:"添加授权用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加授权用户"}},[e._v("#")]),e._v(" 添加授权用户")]),e._v(" "),t("ul",[t("li",[e._v("先进入 mongo 客户端 ："),t("code",[e._v("mongo")])]),e._v(" "),t("li",[e._v("输入："),t("code",[e._v("use admin")]),e._v("，然后输入：")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("db.createUser"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n     user: "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gitnavi"')]),e._v(",\n     pwd: "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"123456"')]),e._v(",\n     roles: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"role"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dbAdmin"')]),e._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"db"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"youmeek_nav"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("ul",[t("li",[e._v("修改密码："),t("code",[e._v("db.changeUserPassword(用户名, 密码)")])]),e._v(" "),t("li",[e._v("删除用户："),t("code",[e._v("db.removeUser(用户名)")])]),e._v(" "),t("li",[e._v("内置角色：\n"),t("ul",[t("li",[e._v("read：允许用户读取指定数据库")]),e._v(" "),t("li",[e._v("readWrite：允许用户读写指定数据库")]),e._v(" "),t("li",[e._v("dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile")]),e._v(" "),t("li",[e._v("userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户")]),e._v(" "),t("li",[e._v("clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。")]),e._v(" "),t("li",[e._v("readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限")]),e._v(" "),t("li",[e._v("readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限")]),e._v(" "),t("li",[e._v("userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限")]),e._v(" "),t("li",[e._v("dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。")]),e._v(" "),t("li",[e._v("root：只在admin数据库中可用。超级账号，超级权限")])])])]),e._v(" "),t("h2",{attrs:{id:"mongodb-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-配置"}},[e._v("#")]),e._v(" MongoDB 配置")]),e._v(" "),t("ul",[t("li",[e._v("编辑配置文件："),t("code",[e._v("vim /etc/mongod.conf")]),e._v("，注意：编辑完记得重启 MongoDB 服务")]),e._v(" "),t("li",[e._v("默认的数据库目录："),t("code",[e._v("/var/lib/mongo")])]),e._v(" "),t("li",[e._v("默认的日志目录："),t("code",[e._v("/var/log/mongodb")])]),e._v(" "),t("li",[e._v("默认的配置文件内容：")])]),e._v(" "),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[e._v("bindIp:127.0.0.1 #注释此行，表示除了本机也可以登陆\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 补充这个，表示必须使用带用户名密码的才能请求 mongodb，比如访问 admin 数据库：mongo 192.168.1.121:27017/admin -u 用户名 -p 用户密码")]),e._v("\nsecurity:\n  authorization: enabled\n")])])]),t("h2",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[e._v("#")]),e._v(" 常用命令")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("show dbs")]),e._v("，查看已有数据库")]),e._v(" "),t("li",[t("code",[e._v("use 数据库名")]),e._v("，进入指定数据库，如果这个数据库不存在了也是可以进入的，进入之后 insert 一条语句就会自动创建了。")]),e._v(" "),t("li",[t("code",[e._v("db")]),e._v("，显示当前用的数据库")]),e._v(" "),t("li",[t("code",[e._v("show collections")]),e._v("，列出当前数据库的collections(当前数据库下的表)")]),e._v(" "),t("li",[t("code",[e._v("show tables")]),e._v("，查看数据库中的集")]),e._v(" "),t("li",[t("code",[e._v("exit")]),e._v("，退出")]),e._v(" "),t("li",[t("code",[e._v("show users")]),e._v("，查看当前库下的用户")]),e._v(" "),t("li",[t("code",[e._v("db.system.users.find().pretty()")]),e._v("，查看所有用户")]),e._v(" "),t("li",[t("code",[e._v("db.dropAllUsers()")]),e._v("，删除所有用户")]),e._v(" "),t("li",[t("code",[e._v("db.dropDatebase()")]),e._v("，删除当前这个数据库")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find()")]),e._v("，查看集中的所有数据，等同于：select * from 表名称")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.findOne()")]),e._v("，查看集中的一条数据，等同于：select * from 表名称 limit 0,1")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find().limit(10)")]),e._v("，查看集中的一条数据")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find().sort({name:1})")]),e._v("，查询列表，根据字段name排序 #1正序 -1倒序")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find().sort({x:1}).skip(5).limit(10)")]),e._v("，查询列表，根据字段name排序，等同于 select from foo order by x asc limit 5, 10")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find({x:10})")]),e._v("，查询列表，等同于 select from foo where x = 10")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find({x: {$lt:10}})")]),e._v("，select from foo where x <= 10")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.find({}, {y:true})")]),e._v("，select y from foo")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.find({"address.city":"gz"})')]),e._v("，搜索嵌套文档address中city值为gz的记录")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.find({likes:"math"})')]),e._v("，搜索数组")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.insert({"a":1,"b":2})')]),e._v("，插入一个测试数据")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.find({name:"lichuang"})')]),e._v("，根据索引或字段查找数据")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.update({name:"张三"},{$set:{name:"李四"}})')]),e._v("，更新数据，等同于：UPDATE 表名 SET name='李四' WHERE name = '张三'")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.update({name:"张三"},{$set:{name:"李四"},{upsert:true},{multi:true}})')]),e._v("，更新数据，等同于：UPDATE 表名 SET name='李四' WHERE name = '张三'。其中特殊的是 upsert 为 true 的时候，表示如果没有这条数据，则创建一条。multi 表示，所有满足条件的都进行更新，不然默认只找到的第一条更新。")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.remove({name:"lichuang"})')]),e._v("，删除数据，等同于：DELETE FROM 表名 WHERE name='lichuang'")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.drop()")]),e._v("，删除这个集合")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.getIndexes()")]),e._v("，查看集合索引")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.dropIndex("name_1")')]),e._v("，删除索引")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.ensureIndex({title:1})")]),e._v("，创建索引")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.ensureIndex({titile:1},{name:"indexname"})')]),e._v("，创建索引，第二个属性设置索引名称")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.ensureIndex({titile:1},{unique:true/false})")]),e._v("，创建唯一索引，第二个属性设置为true说明该字段中值不能重复，false可以重复")]),e._v(" "),t("li",[t("code",[e._v("db.集名称.ensureIndex({name:1,age:1})")]),e._v("，复合索引")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.ensureIndex({"address.city":1})')]),e._v("，在嵌套文档的字段上建索引")]),e._v(" "),t("li",[t("code",[e._v('db.集名称.insert({"article","text"})')]),e._v("，全文索引，指定为text类型,每个数据集合中只允许创建一个全文索引")]),e._v(" "),t("li",[t("code",[e._v("db.adminCommand( {setParameter:1, textSearchEnabled:true})")]),e._v("，开启全文本索引功能")]),e._v(" "),t("li",[e._v("一些符号说明：")])]),e._v(" "),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[e._v("$lt ->less then 小于\n$lte ->less than and equal 不大于\n$lt ->less then 小于\n$gt ->greater then 大于\n$gte ->greater then and equal 不小于）\n$ne ->not equal 不等于\n")])])]),t("ul",[t("li",[e._v("其他材料：\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000007550421",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://segmentfault.com/a/1190000007550421"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000005095959",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://segmentfault.com/a/1190000005095959"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://blog.csdn.net/endlu/article/details/51098518",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://blog.csdn.net/endlu/article/details/51098518"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.cnblogs.com/shaosks/p/5666764.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.cnblogs.com/shaosks/p/5666764.html"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.cookqq.com/blog/51277786-c26c-4f94-9be2-428f3633d9e5",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.cookqq.com/blog/51277786-c26c-4f94-9be2-428f3633d9e5"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.thinksaas.cn/topics/0/513/513705.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.thinksaas.cn/topics/0/513/513705.html"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.fedte.cc/p/511.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.fedte.cc/p/511.html"),t("OutboundLink")],1)])])])]),e._v(" "),t("h2",{attrs:{id:"导入-导出-备份-还原"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入-导出-备份-还原"}},[e._v("#")]),e._v(" 导入 / 导出 / 备份 /还原")]),e._v(" "),t("ul",[t("li",[e._v("数据的导出、导入\n"),t("ul",[t("li",[e._v("导出："),t("code",[e._v("mongoexport -h 127.0.0.1 -u 用户名 -p 密码 -d 库名 -c 集合名 -o /opt/mongodb.json --type json")])]),e._v(" "),t("li",[e._v("导入："),t("code",[e._v("mongoimport -h 127.0.0.1 -u 用户名 -p 密码 -d 库名 -c 集合名 --file /opt/mongodb.json --type json")])])])])]),e._v(" "),t("h2",{attrs:{id:"java-包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-包"}},[e._v("#")]),e._v(" Java 包")]),e._v(" "),t("ul",[t("li",[e._v("spring-data-mongodb："),t("a",{attrs:{href:"http://projects.spring.io/spring-data-mongodb/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://projects.spring.io/spring-data-mongodb/"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("mongo-java-driver："),t("a",{attrs:{href:"https://github.com/mongodb/mongo-java-driver",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/mongodb/mongo-java-driver"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"gui-管理工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gui-管理工具"}},[e._v("#")]),e._v(" GUI 管理工具")]),e._v(" "),t("ul",[t("li",[e._v("Robomongo："),t("a",{attrs:{href:"https://robomongo.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://robomongo.org/"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"基准测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基准测试"}},[e._v("#")]),e._v(" 基准测试")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/brianfrankcooper/YCSB/tree/master/mongodb#4-run-ycsb",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/brianfrankcooper/YCSB/tree/master/mongodb#4-run-ycsb"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"随机生成测试数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#随机生成测试数据"}},[e._v("#")]),e._v(" 随机生成测试数据")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/feliixx/mgodatagen",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/feliixx/mgodatagen"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[e._v("#")]),e._v(" 资料")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.cnblogs.com/zhoujinyi/p/4610050.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.cnblogs.com/zhoujinyi/p/4610050.html"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://lvtraveler.github.io/2016/05/22/%E3%80%90MongoDB%E3%80%91MongoDB%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://lvtraveler.github.io/2016/05/22/【MongoDB】MongoDB入门（一）基本操作-常用命令/"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=o.exports}}]);
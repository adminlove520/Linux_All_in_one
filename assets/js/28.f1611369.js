(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{346:function(t,n,s){t.exports=s.p+"assets/img/Nginx-SSL-a-1.4e60f7c8.jpg"},434:function(t,n,s){"use strict";s.r(n);var e=s(9),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nginx-安装和配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-安装和配置"}},[t._v("#")]),t._v(" Nginx 安装和配置")]),t._v(" "),n("h2",{attrs:{id:"nginx-说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-说明"}},[t._v("#")]),t._v(" Nginx 说明")]),t._v(" "),n("ul",[n("li",[t._v("Nginx 是一个很强大的高性能 Web 和反向代理服务器，常被我们用作负载均衡服务器，也可以作为邮件代理服务器")]),t._v(" "),n("li",[t._v("Nginx WIKI："),n("a",{attrs:{href:"https://zh.wikipedia.org/zh/Nginx",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zh.wikipedia.org/zh/Nginx"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("Nginx 百科："),n("a",{attrs:{href:"http://baike.baidu.com/item/nginx",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://baike.baidu.com/item/nginx"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("Nginx 官网："),n("a",{attrs:{href:"http://nginx.org/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("Nginx 官网下载："),n("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/download.html"),n("OutboundLink")],1),t._v(" "),n("ul",[n("li",[t._v("源码包方式下载："),n("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/download.html"),n("OutboundLink")],1),t._v("，注意该页面的："),n("code",[t._v("Stable version")]),t._v("，这个表示稳定版本，2016-03-22 最新版本是："),n("code",[t._v("nginx-1.8.1")]),t._v("，这是一个  "),n("strong",[t._v("tar.gz")]),t._v(" 的文件链接。")]),t._v(" "),n("li",[t._v("构建包方式下载："),n("a",{attrs:{href:"http://nginx.org/en/linux_packages.html#stable",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/linux_packages.html#stable"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[t._v("Nginx 文档：\n"),n("ul",[n("li",[t._v("优先："),n("a",{attrs:{href:"https://www.nginx.com/resources/wiki/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.nginx.com/resources/wiki/"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("次要："),n("a",{attrs:{href:"http://nginx.org/en/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/docs/"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[t._v("Nginx 模块地址："),n("a",{attrs:{href:"https://www.nginx.com/resources/wiki/modules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.nginx.com/resources/wiki/modules/"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"来自网络上的一个好介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#来自网络上的一个好介绍"}},[t._v("#")]),t._v(" 来自网络上的一个好介绍")]),t._v(" "),n("ul",[n("li",[t._v("来源："),n("a",{attrs:{href:"https://help.aliyun.com/knowledge_detail/6703521.html?spm=5176.788314854.2.2.CdMGlB",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://help.aliyun.com/knowledge_detail/6703521.html?spm=5176.788314854.2.2.CdMGlB"),n("OutboundLink")],1)])]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("传统上基于进程或线程模型架构的 Web 服务通过每进程或每线程处理并发连接请求，这势必会在网络和 I/O 操作时产生阻塞，其另一个必然结果则是对内存或 CPU 的利用率低下。生成一个新的进程/线程需要事先备好其运行时环境，这包括为其分配堆内存和栈内存，以及为其创建新的执行上下文等。这些操作都需要占用 CPU，而且过多的进程/线程还会带来线程抖动或频繁的上下文切换，系统性能也会由此进一步下降。")]),t._v(" "),n("li",[t._v("在设计的最初阶段，Nginx 的主要着眼点就是其高性能以及对物理计算资源的高密度利用，因此其采用了不同的架构模型。受启发于多种操作系统设计中基于“事件”的高级处理机制，nginx采用了模块化、事件驱动、异步、单线程及非阻塞的架构，并大量采用了多路复用及事件通知机制。在 Nginx 中，连接请求由为数不多的几个仅包含一个线程的进程 Worker 以高效的回环(run-loop)机制进行处理，而每个 Worker 可以并行处理数千个的并发连接及请求。")]),t._v(" "),n("li",[t._v("如果负载以 CPU 密集型应用为主，如 SSL 或压缩应用，则 Worker 数应与 CPU 数相同；如果负载以 IO 密集型为主，如响应大量内容给客户端，则 Worker 数应该为 CPU 个数的 1.5 或 2 倍。")]),t._v(" "),n("li",[t._v("Nginx会按需同时运行多个进程：一个主进程(Master)和几个工作进程(Worker)，配置了缓存时还会有缓存加载器进程(Cache Loader)和缓存管理器进程(Cache Manager)等。所有进程均是仅含有一个线程，并主要通过“共享内存”的机制实现进程间通信。主进程以root用户身份运行，而 Worker、Cache Loader 和 Cache manager 均应以非特权用户身份运行。")]),t._v(" "),n("li",[t._v("主进程主要完成如下工作：\n- 1.读取并验正配置信息；\n- 2.创建、绑定及关闭套接字；\n- 3.启动、终止及维护worker进程的个数；\n- 4.无须中止服务而重新配置工作特性；\n- 5.控制非中断式程序升级，启用新的二进制程序并在需要时回滚至老版本；\n- 6.重新打开日志文件，实现日志滚动；\n- 7.编译嵌入式perl脚本；")]),t._v(" "),n("li",[t._v("Worker 进程主要完成的任务包括：\n- 1.接收、传入并处理来自客户端的连接；\n- 2.提供反向代理及过滤功能；\n- 3.nginx任何能完成的其它任务；")]),t._v(" "),n("li",[t._v("Cache Loader 进程主要完成的任务包括：\n- 1.检查缓存存储中的缓存对象；\n- 2.使用缓存元数据建立内存数据库；")]),t._v(" "),n("li",[t._v("Cache Manager 进程的主要任务：\n- 1.缓存的失效及过期检验；")])])]),t._v(" "),n("h2",{attrs:{id:"nginx-的-docker-部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的-docker-部署"}},[t._v("#")]),t._v(" Nginx 的 Docker 部署")]),t._v(" "),n("ul",[n("li",[t._v("预设好目录，在宿主机上创建下面目录："),n("code",[t._v("mkdir -p /data/docker/nginx/logs /data/docker/nginx/conf")])]),t._v(" "),n("li",[n("strong",[t._v("重点")]),t._v("：先准备好你的 nginx.conf 文件，存放在宿主机的："),n("code",[t._v("vim /data/docker/nginx/conf/nginx.conf")]),t._v(" 目录下，等下需要映射。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("worker_processes      1;\n\nevents {\n  worker_connections  1024;\n}\n\nhttp {\n  include             mime.types;\n  default_type        application/octet-stream;\n\n  sendfile on;\n\n  keepalive_timeout   65;\n\n  server {\n    listen            80;\n    server_name       localhost 127.0.0.1 193.112.221.203 youmeek.com;\n\n    location / {\n      root            /usr/share/nginx/html;\n      index           index.html index.htm;\n    }\n  }\n}\n")])])]),n("ul",[n("li",[t._v("官网镜像："),n("a",{attrs:{href:"https://hub.docker.com/_/nginx/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hub.docker.com/_/nginx/"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("下载镜像："),n("code",[t._v("docker pull nginx:1.12.2")])]),t._v(" "),n("li",[t._v("运行容器："),n("code",[t._v("docker run --name youmeek-nginx -p 80:80 -v /data/docker/nginx/logs:/var/log/nginx -v /data/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx:1.12.2")])]),t._v(" "),n("li",[t._v("重新加载配置（目前测试无效，只能重启服务）："),n("code",[t._v("docker exec -it youmeek-nginx nginx -s reload")])]),t._v(" "),n("li",[t._v("停止服务："),n("code",[t._v("docker exec -it youmeek-nginx nginx -s stop")]),t._v(" 或者："),n("code",[t._v("docker stop youmeek-nginx")])]),t._v(" "),n("li",[t._v("重新启动服务："),n("code",[t._v("docker restart youmeek-nginx")])])]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"yum-安装-版本一般滞后半年左右"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yum-安装-版本一般滞后半年左右"}},[t._v("#")]),t._v(" YUM 安装（版本一般滞后半年左右）")]),t._v(" "),n("ul",[n("li",[t._v("安装："),n("code",[t._v("yum install -y nginx")]),t._v("，同时增加了一个 nginx 用户组和用户")]),t._v(" "),n("li",[t._v("默认配置文件位置："),n("code",[t._v("vim /etc/nginx/nginx.conf")])]),t._v(" "),n("li",[t._v("其他配置文件位置："),n("code",[t._v("cd /etc/nginx/conf.d/")])]),t._v(" "),n("li",[t._v("模块配置文件位置："),n("code",[t._v("cd /usr/share/nginx/modules/")])]),t._v(" "),n("li",[t._v("默认 HTML 静态文件位置："),n("code",[t._v("cd /usr/share/nginx/html")])]),t._v(" "),n("li",[t._v("log 存放目录："),n("code",[t._v("cd /var/log/nginx/")])]),t._v(" "),n("li",[t._v("状态："),n("code",[t._v("systemctl status nginx")])]),t._v(" "),n("li",[t._v("启动："),n("code",[t._v("systemctl start nginx")])]),t._v(" "),n("li",[t._v("启动："),n("code",[t._v("systemctl stop nginx")])]),t._v(" "),n("li",[t._v("刷新配置："),n("code",[t._v("nginx -s reload")])]),t._v(" "),n("li",[t._v("查看版本和 YUM 自带的模块："),n("code",[t._v("nginx -V")])])]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"nginx-源码编译安装-带-prometheus-模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-源码编译安装-带-prometheus-模块"}},[t._v("#")]),t._v(" Nginx 源码编译安装（带 Prometheus 模块）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("./configure \\\n--prefix=/usr/local/nginx \\\n--pid-path=/var/local/nginx/nginx.pid \\\n--lock-path=/var/lock/nginx/nginx.lock \\\n--error-log-path=/var/log/nginx/error.log \\\n--http-log-path=/var/log/nginx/access.log \\\n--with-http_gzip_static_module \\\n--http-client-body-temp-path=/var/temp/nginx/client \\\n--http-proxy-temp-path=/var/temp/nginx/proxy \\\n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\\n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\\n--with-http_ssl_module \\\n--with-http_stub_status_module \\\n--http-scgi-temp-path=/var/temp/nginx/scgi \\\n--add-module=/usr/local/nginx-module-vts\n")])])]),n("h2",{attrs:{id:"nginx-源码编译安装-带监控模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-源码编译安装-带监控模块"}},[t._v("#")]),t._v(" Nginx 源码编译安装（带监控模块）")]),t._v(" "),n("ul",[n("li",[t._v("官网下载最新稳定版本 "),n("strong",[t._v("1.8.1")]),t._v("，大小：814K")]),t._v(" "),n("li",[t._v("官网安装说明："),n("a",{attrs:{href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.nginx.com/resources/wiki/start/topics/tutorials/install/"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("源码编译配置参数说明：\n"),n("ul",[n("li",[n("a",{attrs:{href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/installoptions/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.nginx.com/resources/wiki/start/topics/tutorials/installoptions/"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://nginx.org/en/docs/configure.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/docs/configure.html"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[t._v("开始安装：\n"),n("ul",[n("li",[t._v("安装依赖包："),n("code",[t._v("yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel")])]),t._v(" "),n("li",[t._v("预设几个文件夹，方便等下安装的时候有些文件可以进行存放：\n"),n("ul",[n("li",[n("code",[t._v("mkdir -p /usr/local/nginx /var/log/nginx /var/temp/nginx /var/lock/nginx")])])])]),t._v(" "),n("li",[t._v("下载源码包："),n("code",[t._v("wget http://nginx.org/download/nginx-1.8.1.tar.gz")])]),t._v(" "),n("li",[t._v("解压："),n("code",[t._v("tar zxvf nginx-1.8.1.tar.gz")])]),t._v(" "),n("li",[t._v("进入解压后目录："),n("code",[t._v("cd nginx-1.8.1/")])]),t._v(" "),n("li",[t._v("编译配置：")])])])]),t._v(" "),n("div",{staticClass:"language-ini extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[t._v("./configure \\\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--prefix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/usr/local/nginx \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--pid-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/local/nginx/nginx.pid \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--lock-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/lock/nginx/nginx.lock \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--error-log-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/log/nginx/error.log \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-log-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/log/nginx/access.log \\")]),t._v("\n--with-http_gzip_static_module \\\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-client-body-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/client \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-proxy-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/proxy \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-fastcgi-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/fastcgi \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-uwsgi-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/uwsgi \\")]),t._v("\n--with-http_ssl_module \\\n--with-http_stub_status_module \\\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-scgi-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/scgi")]),t._v("\n")])])]),n("ul",[n("li",[t._v("编译："),n("code",[t._v("make")])]),t._v(" "),n("li",[t._v("安装："),n("code",[t._v("make install")])]),t._v(" "),n("li",[t._v("启动 Nginx\n"),n("ul",[n("li",[t._v("先检查是否在 /usr/local 目录下生成了 Nginx 等相关文件："),n("code",[t._v("cd /usr/local/nginx;ll")]),t._v("，正常的效果应该是显示这样的：")])])])]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[t._v("drwxr-xr-x. 2 root root 4096 3月  22 16:21 conf\ndrwxr-xr-x. 2 root root 4096 3月  22 16:21 html\ndrwxr-xr-x. 2 root root 4096 3月  22 16:21 sbin\n")])])]),n("ul",[n("li",[t._v("如果要检查刚刚编译的哪些模块，可以："),n("code",[t._v("nginx -V")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("nginx version: nginx/1.8.0\nbuilt by gcc 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC)\nbuilt with OpenSSL 1.0.1e-fips 11 Feb 2013\nTLS SNI support enabled\nconfigure arguments: --user=nginx --group=nginx --prefix=/usr/local/nginx --pid-path=/usr/local/nginx/run/nginx.pid --lock-path=/usr/local/nginx/lock/nginx.lock --with-http_ssl_module --with-http_dav_module --with-http_flv_module --with-http_gzip_static_module --with-http_stub_status_module\n")])])]),n("ul",[n("li",[t._v("停止防火墙："),n("code",[t._v("service iptables stop")]),t._v(" "),n("ul",[n("li",[t._v("或是把 80 端口加入到的排除列表：")]),t._v(" "),n("li",[n("code",[t._v("sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT")])]),t._v(" "),n("li",[n("code",[t._v("sudo service iptables save")])]),t._v(" "),n("li",[n("code",[t._v("sudo service iptables restart")])])])]),t._v(" "),n("li",[t._v("启动："),n("code",[t._v("/usr/local/nginx/sbin/nginx")]),t._v("，启动完成 shell 是不会有输出的")]),t._v(" "),n("li",[t._v("检查 时候有 Nginx 进程："),n("code",[t._v("ps aux | grep nginx")]),t._v("，正常是显示 3 个结果出来")]),t._v(" "),n("li",[t._v("检查 Nginx 是否启动并监听了 80 端口："),n("code",[t._v("netstat -ntulp | grep 80")])]),t._v(" "),n("li",[t._v("访问："),n("code",[t._v("192.168.1.114")]),t._v("，如果能看到："),n("code",[t._v("Welcome to nginx!")]),t._v("，即可表示安装成功")]),t._v(" "),n("li",[t._v("检查 Nginx 启用的配置文件是哪个："),n("code",[t._v("/usr/local/nginx/sbin/nginx -t")])]),t._v(" "),n("li",[t._v("刷新 Nginx 配置后重启："),n("code",[t._v("/usr/local/nginx/sbin/nginx -s reload")])]),t._v(" "),n("li",[t._v("停止 Nginx："),n("code",[t._v("/usr/local/nginx/sbin/nginx -s stop")])]),t._v(" "),n("li",[t._v("如果访问不了，或是出现其他信息看下错误立即："),n("code",[t._v("vim /var/log/nginx/error.log")])])]),t._v(" "),n("h2",{attrs:{id:"把-nginx-添加到系统服务中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#把-nginx-添加到系统服务中"}},[t._v("#")]),t._v(" 把 Nginx 添加到系统服务中")]),t._v(" "),n("ul",[n("li",[t._v("新建文件："),n("code",[t._v("vim /etc/init.d/nginx")])]),t._v(" "),n("li",[t._v("添加如下内容：")])]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx执行程序路径需要修改")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nginxd=/usr/local/nginx/sbin/nginx")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nginx配置文件路径需要修改")]),t._v("\nnginx_config=/usr/local/nginx/conf/nginx.conf\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pid 地址需要修改")]),t._v("\nnginx_pid=/var/local/nginx/nginx.pid\n\n\nRETVAL=0\nprog="),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Source function library.")]),t._v("\n. /etc/rc.d/init.d/functions\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Source networking configuration.")]),t._v("\n. /etc/sysconfig/network\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check that networking is up.")]),t._v("\n[ $")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("NETWORKING"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' = "no" ] && '),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n[ -x "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nginxd")]),t._v(" ] || exit "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start nginx daemons functions.")]),t._v("\nstart()")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" [ -e "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nginx_pid")]),t._v(" ]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n   "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx already running...."')]),t._v("\n   exit "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nfi\n\necho -n $"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting '),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$prog")]),t._v(': "')]),t._v("\ndaemon "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nginxd")]),t._v(" -c $")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("nginx_config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nRETVAL=$?\necho\n[ $RETVAL = 0 ] && touch /var/lock/subsys/nginx\nreturn $RETVAL\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stop nginx daemons functions.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pid 地址需要修改")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("stop()")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n\techo -n $"Stopping $prog: "\n\tkillproc $nginxd\n\tRETVAL=$?\n\techo\n\t[ $RETVAL = 0 ] && rm -f /var/lock/subsys/nginx /var/local/nginx/nginx.pid\n'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reload nginx service functions.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reload()")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n\techo -n $"Reloading $prog: "\n\t'),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#kill -HUP `cat ${nginx_pid}`")]),t._v("\n\tkillproc $nginxd -HUP\n\tRETVAL=$?\n\techo\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See how we were called.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" in\n\tstart)\n\t\tstart")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("stop)")]),t._v("\n\t\tstop")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reload)")]),t._v("\n\t\treload")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("restart)")]),t._v("\n\t\tstop\n\t\tstart")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status)")]),t._v("\n\t\tstatus "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$prog")]),t._v("\n\t\tRETVAL=$?")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v('\n\t*)\n\n\techo $"Usage: $prog '),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("start|stop|restart|reload|status|help"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n\texit 1\n\nesac\nexit $RETVAL\n')])])]),n("ul",[n("li",[t._v("修改权限："),n("code",[t._v("chmod 755 /etc/init.d/nginx")])]),t._v(" "),n("li",[t._v("启动服务："),n("code",[t._v("service nginx start")])]),t._v(" "),n("li",[t._v("停止服务："),n("code",[t._v("service nginx stop")])]),t._v(" "),n("li",[t._v("重启服务："),n("code",[t._v("service nginx restart")])])]),t._v(" "),n("h2",{attrs:{id:"nginx-无缝升级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-无缝升级"}},[t._v("#")]),t._v(" Nginx 无缝升级")]),t._v(" "),n("ul",[n("li",[t._v("使用新的参数"),n("code",[t._v("configure")]),t._v("后执行"),n("code",[t._v("make")]),t._v("重新编译,注意之后不要执行"),n("code",[t._v("make install")]),t._v(".新构建的Nginx会在"),n("code",[t._v("objs")]),t._v("目录下")]),t._v(" "),n("li",[t._v("备份旧的Nginx "),n("code",[t._v("cp 老的nginx目录/sbin/nginx 老的nginx目录/sbin/nginx.old")])]),t._v(" "),n("li",[t._v("复制新的Nginx "),n("code",[t._v("cp ./objs/nginx 老的nginx目录/sbin/")]),t._v(",可能提示Nginx被占用,如果是则强制覆盖即可.")]),t._v(" "),n("li",[t._v("检查下Makefile的更新指令 "),n("code",[t._v("cat Makefile")]),t._v(",检查下路径是否匹配,一般没什么问题毕竟是根据你的参数生成的文件.")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("upgrade:\n\t/usr/local/nginx/sbin/nginx "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-USR2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/local/nginx/nginx.pid"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" /var/local/nginx/nginx.pid.oldbin\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-QUIT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/local/nginx/nginx.pid.oldbin"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),n("ul",[n("li",[t._v("更新 "),n("code",[t._v("make upgrade")])])]),t._v(" "),n("h2",{attrs:{id:"为-nginx-添加-basic-auth"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为-nginx-添加-basic-auth"}},[t._v("#")]),t._v(" 为 Nginx 添加 basic_auth")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('yum install httpd-tools  \n\nhtpasswd -c /opt/nginx-auth/passwd.db myusername，回车之后输入两次密码\n\n\nserver {\n    ...\n\n    location / {\n        auth_basic   "please input you user name and password";\n        auth_basic_user_file    /opt/nginx-auth/passwd.db;\n        ....\n    }\n}\n\n')])])]),n("h2",{attrs:{id:"nginx-全局变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-全局变量"}},[t._v("#")]),t._v(" Nginx 全局变量")]),t._v(" "),n("ul",[n("li",[t._v("$arg_PARAMETER #这个变量包含GET请求中，如果有变量PARAMETER时的值。")]),t._v(" "),n("li",[t._v("$args #这个变量等于请求行中(GET请求)的参数，例如foo=123&bar=blahblah;")]),t._v(" "),n("li",[t._v("$binary_remote_addr #二进制的客户地址。")]),t._v(" "),n("li",[t._v("$body_bytes_sent #响应时送出的body字节数数量。即使连接中断，这个数据也是精确的。")]),t._v(" "),n("li",[t._v("$content_length #请求头中的Content-length字段。")]),t._v(" "),n("li",[t._v("$content_type #请求头中的Content-Type字段。")]),t._v(" "),n("li",[t._v("$cookie_COOKIE #cookie COOKIE变量的值")]),t._v(" "),n("li",[t._v("$document_root #当前请求在root指令中指定的值。")]),t._v(" "),n("li",[t._v("$document_uri #与$uri相同。")]),t._v(" "),n("li",[t._v("$host #请求主机头字段，否则为服务器名称。")]),t._v(" "),n("li",[t._v("$hostname #Set to the machine’s hostname as returned by gethostname")]),t._v(" "),n("li",[t._v("$http_HEADER")]),t._v(" "),n("li",[t._v('$is_args #如果有$args参数，这个变量等于”?”，否则等于”"，空值。')]),t._v(" "),n("li",[t._v("$http_user_agent #客户端agent信息")]),t._v(" "),n("li",[t._v("$http_cookie #客户端cookie信息")]),t._v(" "),n("li",[t._v("$limit_rate #这个变量可以限制连接速率。")]),t._v(" "),n("li",[t._v("$query_string #与$args相同。")]),t._v(" "),n("li",[t._v("$request_body_file #客户端请求主体信息的临时文件名。")]),t._v(" "),n("li",[t._v("$request_method #客户端请求的动作，通常为GET或POST。")]),t._v(" "),n("li",[t._v("$remote_addr #客户端的IP地址。")]),t._v(" "),n("li",[t._v("$remote_port #客户端的端口。")]),t._v(" "),n("li",[t._v("$remote_user #已经经过Auth Basic Module验证的用户名。")]),t._v(" "),n("li",[t._v("$request_completion #如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)。")]),t._v(" "),n("li",[t._v("$request_method #GET或POST")]),t._v(" "),n("li",[t._v("$request_filename #当前请求的文件路径，由root或alias指令与URI请求生成。")]),t._v(" "),n("li",[t._v("$request_uri #包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。不能修改。")]),t._v(" "),n("li",[t._v("$scheme #HTTP方法（如http，https）。")]),t._v(" "),n("li",[t._v("$server_protocol #请求使用的协议，通常是HTTP/1.0或HTTP/1.1。")]),t._v(" "),n("li",[t._v("$server_addr #服务器地址，在完成一次系统调用后可以确定这个值。")]),t._v(" "),n("li",[t._v("$server_name #服务器名称。")]),t._v(" "),n("li",[t._v("$server_port #请求到达服务器的端口号。")]),t._v(" "),n("li",[t._v("$uri #不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。该值有可能和$request_uri 不一致。")]),t._v(" "),n("li",[t._v("$request_uri是浏览器发过来的值。该值是rewrite后的值。例如做了internal redirects后。")])]),t._v(" "),n("h2",{attrs:{id:"nginx-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置"}},[t._v("#")]),t._v(" Nginx 配置")]),t._v(" "),n("ul",[n("li",[t._v("Nginx 默认配置文件："),n("code",[t._v("vim /usr/local/nginx/conf/nginx.conf")])])]),t._v(" "),n("h3",{attrs:{id:"nginx-在-1-8-1-版本下的默认配置-去掉注释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-在-1-8-1-版本下的默认配置-去掉注释"}},[t._v("#")]),t._v(" Nginx 在 1.8.1 版本下的默认配置（去掉注释）")]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我这里习惯使用 root，所以这里需要这样设置。如果你有为你的 nginx 专门配置一个用户，这里需要改为你的用户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       mime.types")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("  application/octet-stream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"http-服务-虚拟主机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-服务-虚拟主机"}},[t._v("#")]),t._v(" HTTP 服务，虚拟主机")]),t._v(" "),n("ul",[n("li",[t._v("停止防火墙："),n("code",[t._v("service iptables stop")]),t._v("，防止出现特别干扰")]),t._v(" "),n("li",[t._v("编辑默认的配置文件："),n("code",[t._v("vim /usr/local/nginx/conf/nginx.conf")])]),t._v(" "),n("li",[t._v("设置两个虚拟主机（通过"),n("strong",[t._v("端口")]),t._v("来区分开）")])]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我这里习惯使用 root，所以这里需要这样设置。如果你有为你的 nginx 专门配置一个用户，这里需要改为你的用户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       mime.types")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("  application/octet-stream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个 server 代表一个虚拟主机")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟机根目录是 /usr/local/nginx/html 目录")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟机首页是 /usr/local/nginx/html 目录下这两个文件")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二个虚拟机的端口是 90，服务地址还是本地")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html90")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("设置两个虚拟主机（通过"),n("strong",[t._v("域名")]),t._v("来区分开）")])]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我这里习惯使用 root，所以这里需要这样设置。如果你有为你的 nginx 专门配置一个用户，这里需要改为你的用户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       mime.types")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("  application/octet-stream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个 server 代表一个虚拟主机")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 两个虚拟主机都使用 80 端口，设置不同域名")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  code.youmeek.com")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟机根目录是 /usr/local/nginx/html 目录")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟机首页是 /usr/local/nginx/html 目录下这两个文件")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 两个虚拟主机都使用 80 端口，设置不同域名")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  i.youmeek.com")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html-i")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"反向代理和负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反向代理和负载均衡"}},[t._v("#")]),t._v(" 反向代理和负载均衡")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("最精简的环境：一台虚拟机")]),t._v(" "),n("ul",[n("li",[t._v("1 个 JDK")]),t._v(" "),n("li",[t._v("1 个 Nginx")]),t._v(" "),n("li",[t._v("2 个 Tomcat")])])]),t._v(" "),n("li",[n("p",[t._v("Nginx 配置：")])])]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我这里习惯使用 root，所以这里需要这样设置。如果你有为你的 nginx 专门配置一个用户，这里需要改为你的用户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       mime.types")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("  application/octet-stream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自己定义的两个 tomcat 请求地址和端口")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也就是当浏览器请求：tomcat.youmeek.com 的时候从下面这两个 tomcat 中去找一个进行转发")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" tomcatCluster")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.1.114:8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.1.114:8081")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 weight 字段可以表示权重，值越高权重越大，默认值是 1，最大值官网没说，一般如果设置也就设置 3,5,7 这样的数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官网：https://www.nginx.com/resources/admin-guide/load-balancer/#weight")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server 192.168.1.114:8080 weight=2;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server 192.168.1.114:8081 weight=1;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  tomcat.youmeek.com")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("   http://tomcatCluster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"配置-https-服务-ssl-证书配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-https-服务-ssl-证书配置"}},[t._v("#")]),t._v(" 配置 HTTPS 服务（SSL 证书配置）")]),t._v(" "),n("ul",[n("li",[t._v("免费申请 SSL 证书渠道\n"),n("ul",[n("li",[t._v("教程："),n("a",{attrs:{href:"https://www.wn789.com/4394.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.wn789.com/4394.html"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("SSL For Free："),n("a",{attrs:{href:"https://www.sslforfree.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.sslforfree.com"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("配置要点其实就是下面该图：")])])]),t._v(" "),n("li",[n("img",{attrs:{src:s(346),alt:"免费申请 SSL 证书渠道"}})]),t._v(" "),n("li",[t._v("一般你会下载下面两个文件："),n("code",[t._v("certificate.crt")]),t._v("，"),n("code",[t._v("private.key")])]),t._v(" "),n("li",[t._v("如果你需要把 crt 和 key 的证书转换成 keystore（如果你有这个需求的话）")]),t._v(" "),n("li",[t._v("从 key 和 crt 生成 pkcs12 格式的 keystore，生成过程会让人你输入密码，这个密码下面会用到，我这里假设输入 123456\n"),n("ul",[n("li",[n("code",[t._v("openssl pkcs12 -export -in certificate.crt -inkey private.key -out youmeek.p12 -name youmeek -CAfile certificate.crt -caname -chain")])]),t._v(" "),n("li",[n("code",[t._v("keytool -importkeystore -v -srckeystore youmeek.p12 -srcstoretype pkcs12 -srcstorepass 123456 -destkeystore youmeek.keystore -deststoretype jks -deststorepass 123456")])])])]),t._v(" "),n("li",[t._v("修改 nginx 配置文件，增加对 HTTPS 支持（下面的配置是基于默认安装 nginx 后的配置）")]),t._v(" "),n("li",[n("code",[t._v("vim /usr/local/nginx/conf/nginx.conf")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("worker_processes  1;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    \n    # 如果访问 http 也直接跳转到 https\n    server {\n        listen       80;\n        server_name sso.youmeek.com;\n        return 301 https://$server_name$request_uri;\n    }\n    \n    # crt 和 key 文件的存放位置根据你自己存放位置进行修改\n    server {\n        listen       443;\n        server_name  sso.youmeek.com;\n        ssl  on;\n        ssl_certificate     /opt/ssl/certificate.crt;\n        ssl_certificate_key /opt/ssl/private.key;\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n\n")])])]),n("ul",[n("li",[t._v("最新版本的 Nginx SSL 配置")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("listen 443 ssl;\n\nssl_certificate     /opt/jar/ssl/server.crt;\nssl_certificate_key /opt/jar/ssl/server.key;\n\nssl_session_timeout 5m;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\nssl_prefer_server_ciphers on;\n")])])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"nginx-压力测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-压力测试"}},[t._v("#")]),t._v(" Nginx 压力测试")]),t._v(" "),n("ul",[n("li",[t._v("AB 测试工具安装："),n("code",[t._v("yum install -y httpd-tools")])]),t._v(" "),n("li",[t._v("使用：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ab -n 1000 -c 100 http://www.baidu.com/\n\n-n  总的请求数\n-c  单个时刻并发数\n")])])]),n("ul",[n("li",[t._v("压测结果：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("This is ApacheBench, Version 2.3 <$Revision: 1430300 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking juejin.im (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nCompleted 1000 requests\nFinished 1000 requests\n\n\nServer Software:        nginx\nServer Hostname:        juejin.im\nServer Port:            443\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\n\nDocument Path:          /\nDocument Length:        271405 bytes\n\nConcurrency Level:      100（并发数：100）\nTime taken for tests:   120.042 seconds（一共用了 120 秒）\nComplete requests:      1000（总的请求数：1000）\nFailed requests:        0（失败的请求次数）\nWrite errors:           0\nTotal transferred:      271948000 bytes\nHTML transferred:       271405000 bytes\nRequests per second:    8.33 [#/sec] (mean)（QPS 系统吞吐量，平均每秒请求数，计算公式 = 总请求数 / 总时间数）\nTime per request:       12004.215 [ms] (mean)（毫秒，平均每次并发 100 个请求的处理时间）\nTime per request:       120.042 [ms] (mean, across all concurrent requests)（毫秒，并发 100 下，平均每个请求处理时间）\nTransfer rate:          2212.34 [Kbytes/sec] received（平均每秒网络流量）\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:       57  159 253.6     77    1002\nProcessing:  1139 11570 2348.2  11199   36198\nWaiting:      156 1398 959.4   1279   22698\nTotal:       1232 11730 2374.1  11300   36274\n\nPercentage of the requests served within a certain time (ms)\n  50%  11300\n  66%  11562\n  75%  11863\n  80%  12159\n  90%  13148\n  95%  15814\n  98%  18882\n  99%  22255\n 100%  36274 (longest request)\n")])])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"nginx-常规优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-常规优化"}},[t._v("#")]),t._v(" Nginx 常规优化")]),t._v(" "),n("h4",{attrs:{id:"增加工作线程数和并发连接数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#增加工作线程数和并发连接数"}},[t._v("#")]),t._v(" 增加工作线程数和并发连接数")]),t._v(" "),n("ul",[n("li",[t._v("修改参数："),n("code",[t._v("worker_processes 1;")])]),t._v(" "),n("li",[t._v("该参数是指：nginx 要开启的工作进程数（worker process），默认是 1，一把你不需要修改。（除了工作进程，还有一种 master process 的概念）")]),t._v(" "),n("li",[t._v("但是如果请求数比较多，一般推荐最大是修改成 CPU 的内核数等同的值，以增加能力。")]),t._v(" "),n("li",[t._v("修改 events 参数")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("events {\n\t# 每一个进程可以打开的最大连接数（这个参数是受限制于系统参数的，默认是 1024）（进程数是上面 worker_processes 决定的）\n    worker_connections  1024;\n    # 可以一次建立多个连接\n    multi_accept on;\n    # epoll 模式效率最高\n    use epoll;\n}\n")])])]),n("h4",{attrs:{id:"启动长连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动长连接"}},[t._v("#")]),t._v(" 启动长连接")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("http {\n  sendfile on; # 减少文件在应用和内核之间的拷贝\n  tcp_nopush on; # 当数据包达到一定大小再发送\n  \n  keepalive_timeout   65;\n  \n  upstream tomcatCluster {\n      server 192.168.1.114:8080;\n      server 192.168.1.114:8081;\n      keepalive 300; # 300 个长连接\n  }\n  \n}\n")])])]),n("h4",{attrs:{id:"启用缓存和压缩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启用缓存和压缩"}},[t._v("#")]),t._v(" 启用缓存和压缩")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('http {\n    gzip on;\n    gzip_buffers 8 16k; # 这个限制了nginx不能压缩大于128k的文件\n    gzip_min_length 512; # 单位byte\n    gzip_disable "MSIE [1-6]\\.(?!.*SV1)";\n    gzip_http_version 1.1; # 1.0 的版本可能会有问题\n    gzip_types   text/plain text/css application/javascript application/x-javascript application/json application/xml;\n}\n')])])]),n("h4",{attrs:{id:"操作系统优化-机器好点的时候"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作系统优化-机器好点的时候"}},[t._v("#")]),t._v(" 操作系统优化（机器好点的时候）")]),t._v(" "),n("h6",{attrs:{id:"修改-sysctl-参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改-sysctl-参数"}},[t._v("#")]),t._v(" 修改 sysctl 参数")]),t._v(" "),n("ul",[n("li",[t._v("修改配置文件："),n("code",[t._v("vim /etc/sysctl.conf")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("net.ipv4.tcp_fin_timeout = 10           #保持在FIN-WAIT-2状态的时间，使系统可以处理更多的连接。此参数值为整数，单位为秒。\nnet.ipv4.tcp_tw_reuse = 1              #开启重用，允许将TIME_WAIT socket用于新的TCP连接。默认为0，表示关闭。\nnet.ipv4.tcp_tw_recycle = 0            #开启TCP连接中TIME_WAIT socket的快速回收。默认值为0，表示关闭。\nnet.ipv4.tcp_syncookies = 1            #开启SYN cookie，出现SYN等待队列溢出时启用cookie处理，防范少量的SYN攻击。默认为0，表示关闭。\nnet.core.somaxconn = 1024             #定义了系统中每一个端口最大的监听队列的长度, 对于一个经常处理新连接的高负载 web服务环境来说，默认值为128，偏小。\n")])])]),n("ul",[n("li",[t._v("刷新 sysctl 配置："),n("code",[t._v("sysctl -p")])])]),t._v(" "),n("h6",{attrs:{id:"修改-limits-参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改-limits-参数"}},[t._v("#")]),t._v(" 修改 limits 参数")]),t._v(" "),n("ul",[n("li",[t._v("ElasticSearch 一般也是要修改该参数")]),t._v(" "),n("li",[t._v("修改配置文件："),n("code",[t._v("vim /etc/security/limits.conf")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("* soft nofile 262144\n* hard nofile 262144\n* soft core unlimited\n* soft stack 262144\n")])])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"nginx-监控模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-监控模块"}},[t._v("#")]),t._v(" Nginx 监控模块")]),t._v(" "),n("ul",[n("li",[t._v("如果你需要监控 nginx 情况可以安装的加入这个模块 http_stub_status_module：")])]),t._v(" "),n("div",{staticClass:"language-ini extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[t._v("./configure \\\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--prefix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/usr/local/nginx \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--pid-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/local/nginx/nginx.pid \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--lock-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/lock/nginx/nginx.lock \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--error-log-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/log/nginx/error.log \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-log-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/log/nginx/access.log \\")]),t._v("\n--with-http_gzip_static_module \\\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-client-body-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/client \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-proxy-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/proxy \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-fastcgi-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/fastcgi \\")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-uwsgi-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/uwsgi \\")]),t._v("\n--with-http_ssl_module \\\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("--http-scgi-temp-path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/var/temp/nginx/scgi \\")]),t._v("\n--with-http_stub_status_module\n")])])]),n("ul",[n("li",[t._v("然后在 nginx.conf 文件的 location 区域增加：stub_status on;")])]),t._v(" "),n("div",{staticClass:"language-ini extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[t._v("location /nginx_status {\n    allow 127.0.0.1;\n    deny all;\n    stub_status on;\n    access_log   off;\n}\n")])])]),n("ul",[n("li",[t._v("当你访问：http://127.0.0.1/nginx_status，会得到类似下面的结果")]),t._v(" "),n("li",[t._v("其中配置的 "),n("code",[t._v("allow 127.0.0.1;")]),t._v(" 表示只允许本机访问：http://127.0.0.1/nginx_status 才能看到\n"),n("ul",[n("li",[t._v("所以我们也可以通过 curl 访问本机看到结果，不一定要对外开放。")])])]),t._v(" "),n("li",[n("code",[t._v("deny all;")]),t._v(" 除了被允许的，其他所有人都不可以访问")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Active connections: 1\nserver accepts handled requests\n 3 6 9   \nReading: 0 Writing: 5 Waiting: 0   \n")])])]),n("ul",[n("li",[t._v("Active connections: 当前活动连接数，包含 waiting 的连接（最常需要看的就是这个参数）")]),t._v(" "),n("li",[t._v("Server accepts handled requests: Nginx总共处理了 3 个连接,成功创建 6 次握手(证明中间没有失败的),总共处理了 9 个请求.")]),t._v(" "),n("li",[t._v("Reading: Nginx 读取到客户端的 Header 信息数，如果很大，说明现在很多请求正在过来")]),t._v(" "),n("li",[t._v("Writing: Nginx 返回给客户端的 Header 信息数，如果很大，说明现在又很多请求正在响应")]),t._v(" "),n("li",[t._v("Waiting: 开启keep-alive的情况下,这个值等于 active – (reading + writing),意思就是 Nginx 已经处理完成,正在等候下一次请求指令的驻留连接.")]),t._v(" "),n("li",[t._v("所以,在访问效率高,请求很快被处理完毕的情况下,Waiting数比较多是正常的。"),n("strong",[t._v("如果reading + writing数较多,则说明并发访问量非常大,正在处理过程中")])])]),t._v(" "),n("h2",{attrs:{id:"nginx-配置文件常用配置积累"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置文件常用配置积累"}},[t._v("#")]),t._v(" Nginx 配置文件常用配置积累")]),t._v(" "),n("h3",{attrs:{id:"location-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location-配置"}},[t._v("#")]),t._v(" location 配置")]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[t._v("= 开头表示精确匹配\n^~ 开头表示uri以某个常规字符串开头，不是正则匹配\n~ 开头表示区分大小写的正则匹配"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n~* 开头表示不区分大小写的正则匹配\n/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /user")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /user")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /user/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /user/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /user/youmeek")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /user/youmeek")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ ^(/cas/|/casclient1/|/casclient2/|/casclient3/)")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|ico|woff|woff2|ttf|eot|txt)$")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token directive"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*$")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"链接-aa-下-查询参数包含-bb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#链接-aa-下-查询参数包含-bb"}},[t._v("#")]),t._v(" 链接 aa 下，查询参数包含 bb")]),t._v(" "),n("ul",[n("li",[t._v("这里必须使用：IF，但是 IF 是不被推荐的："),n("a",{attrs:{href:"https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/",target:"_blank",rel:"noopener noreferrer"}},[t._v("If Is Evil"),n("OutboundLink")],1)])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /aa/ {\n\tif ( $args ~* '(.*bb.*)' ) {\n\t\treturn 601;\n\t}\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location /aa/ {\n\tif ($args ~ tag=bb){\n\t\treturn 601;\n\t}\n}\n")])])]),n("hr"),t._v(" "),n("h3",{attrs:{id:"http-服务-绑定多个域名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-服务-绑定多个域名"}},[t._v("#")]),t._v(" HTTP 服务，绑定多个域名")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.ttlsa.com/nginx/use-nginx-proxy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ttlsa.com/nginx/use-nginx-proxy/"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"安装第三方模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装第三方模块"}},[t._v("#")]),t._v(" 安装第三方模块")]),t._v(" "),n("h3",{attrs:{id:"生成规格图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成规格图"}},[t._v("#")]),t._v(" 生成规格图")]),t._v(" "),n("h3",{attrs:{id:"启用-gzip-压缩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启用-gzip-压缩"}},[t._v("#")]),t._v(" 启用 Gzip 压缩")]),t._v(" "),n("h3",{attrs:{id:"防盗链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#防盗链"}},[t._v("#")]),t._v(" 防盗链")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://help.aliyun.com/knowledge_detail/5974693.html?spm=5176.788314853.2.18.s4z1ra",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://help.aliyun.com/knowledge_detail/5974693.html?spm=5176.788314853.2.18.s4z1ra"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"nginx-禁止特定用户代理-user-agents-访问-静止指定-ip-访问"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-禁止特定用户代理-user-agents-访问-静止指定-ip-访问"}},[t._v("#")]),t._v(" Nginx 禁止特定用户代理（User Agents）访问，静止指定 IP 访问")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.ttlsa.com/nginx/how-to-block-user-agents-using-nginx/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ttlsa.com/nginx/how-to-block-user-agents-using-nginx/"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://help.aliyun.com/knowledge_detail/5974693.html?spm=5176.788314853.2.18.s4z1ra",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://help.aliyun.com/knowledge_detail/5974693.html?spm=5176.788314853.2.18.s4z1ra"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("<>")]),t._v(" "),n("li",[t._v("<>")]),t._v(" "),n("li",[t._v("<>")])]),t._v(" "),n("h3",{attrs:{id:"nginx-缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-缓存"}},[t._v("#")]),t._v(" Nginx 缓存")]),t._v(" "),n("h3",{attrs:{id:"nginx-自动分割日志文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-自动分割日志文件"}},[t._v("#")]),t._v(" Nginx 自动分割日志文件")]),t._v(" "),n("ul",[n("li",[t._v("在 "),n("RouterLink",{attrs:{to:"/linux/soft/Nginx&Tomcat/Tomcat-Install-And-Settings.html"}},[t._v("Tomcat 安装和配置、优化")]),t._v(" 文章已经使用了 cronolog，这里也借用 cronolog 来实现分割。具体安装看文章。")],1),t._v(" "),n("li",[t._v("创建目录："),n("code",[t._v("mkdir -p /data/nginx/log/logs")])]),t._v(" "),n("li",[t._v("创建命名管道："),n("code",[t._v("mkfifo /data/nginx/log/access_log.log")])]),t._v(" "),n("li",[t._v("配置 cronolog（按天）："),n("code",[t._v("nohup cat /data/nginx/log/access_log.log | /usr/sbin/cronolog /data/nginx/log/logs/access-%Y-%m-%d.log &")])]),t._v(" "),n("li",[t._v("配置 cronolog（按月）："),n("code",[t._v("nohup cat /data/nginx/log/access_log.log | /usr/sbin/cronolog /data/nginx/log/logs/access-%Y-%m.log &")])]),t._v(" "),n("li",[t._v("编辑 nginx 配置文件，配置 log 位置："),n("code",[t._v("access_log /data/nginx/log/access_log.log;")])]),t._v(" "),n("li",[t._v("重启 nginx，最终可以在 /data/nginx/log/logs 目录下看到生成的 log")])]),t._v(" "),n("h3",{attrs:{id:"nginx-处理跨域请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-处理跨域请求"}},[t._v("#")]),t._v(" Nginx 处理跨域请求")]),t._v(" "),n("h3",{attrs:{id:"安全相预防"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安全相预防"}},[t._v("#")]),t._v(" 安全相预防")]),t._v(" "),n("p",[t._v("在配置文件中设置自定义缓存以限制缓冲区溢出攻击的可能性\nclient_body_buffer_size 1K;\nclient_header_buffer_size 1k;\nclient_max_body_size 1k;\nlarge_client_header_buffers 2 1k;")]),t._v(" "),n("ol",{attrs:{start:"7"}},[n("li",[n("p",[t._v("将timeout设低来防止DOS攻击\n所有这些声明都可以放到主配置文件中。\nclient_body_timeout 10;\nclient_header_timeout 10;\nkeepalive_timeout 5 5;\nsend_timeout 10;")])]),t._v(" "),n("li",[n("p",[t._v("限制用户连接数来预防DOS攻击\nlimit_zone slimits $binary_remote_addr 5m;\nlimit_conn slimits 5;")])])]),t._v(" "),n("h2",{attrs:{id:"使用-logrotate-做-nginx-日志轮询分割"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-logrotate-做-nginx-日志轮询分割"}},[t._v("#")]),t._v(" 使用 logrotate 做 nginx 日志轮询分割")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("前提：")]),t._v(" "),n("ul",[n("li",[t._v("我 nginx 的成功日志路径：/var/log/nginx/access.log")]),t._v(" "),n("li",[t._v("我 nginx 的错误日志路径：/var/log/nginx/error.log")]),t._v(" "),n("li",[t._v("pid 路径：/var/local/nginx/nginx.pid")])])]),t._v(" "),n("li",[n("p",[t._v("一般情况 CentOS 是装有：logrotate，你可以检查下："),n("code",[t._v("rpm -ql logrotate")]),t._v("，如果有相应结果，则表示你也装了。")])]),t._v(" "),n("li",[n("p",[t._v("logrotate 配置文件一般在：")]),t._v(" "),n("ul",[n("li",[t._v("全局配置：/etc/logrotate.conf 通用配置文件，可以定义全局默认使用的选项。")]),t._v(" "),n("li",[t._v("自定义配置，放在这个目录下的都算是：/etc/logrotate.d/")])])]),t._v(" "),n("li",[n("p",[t._v("针对 nginx 创建自定义的配置文件："),n("code",[t._v("vim /etc/logrotate.d/nginx")])])]),t._v(" "),n("li",[n("p",[t._v("文件内容如下：")])])]),t._v(" "),n("div",{staticClass:"language-ini extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[t._v("\n/var/log/nginx/access.log /var/log/nginx/error.log {\n\tcreate 644 root root\n\tnotifempty\n\tdaily\n\trotate 15\n\tmissingok\n\tdateext\n\tsharedscripts\n\tpostrotate\n\t    if [ -f /var/local/nginx/nginx.pid ]; then\n\t        kill -USR1 `cat /var/local/nginx/nginx.pid`\n\t    fi\n\tendscript\n}\n\n")])])]),n("ul",[n("li",[n("p",[t._v("/var/log/nginx/access.log /var/log/nginx/error.log：多个文件用空格隔开，也可以用匹配符：/var/log/nginx/*.log")])]),t._v(" "),n("li",[n("p",[t._v("notifempty：如果是空文件的话，不转储")])]),t._v(" "),n("li",[n("p",[t._v("create 644 root root：create mode owner group 转储文件，使用指定的文件模式创建新的日志文件")])]),t._v(" "),n("li",[n("p",[t._v("调用频率，有：daily，weekly，monthly可选")])]),t._v(" "),n("li",[n("p",[t._v("rotate 15：一次将存储15个归档日志。对于第16个归档，时间最久的归档将被删除。")])]),t._v(" "),n("li",[n("p",[t._v("sharedscripts：所有的日志文件都轮转完毕后统一执行一次脚本")])]),t._v(" "),n("li",[n("p",[t._v("missingok：如果日志文件丢失，不报错继续执行下一个")])]),t._v(" "),n("li",[n("p",[t._v("dateext：文件后缀是日期格式,也就是切割后文件是:xxx.log-20131216.gz 这样,如果注释掉,切割出来是按数字递增,即前面说的 xxx.log-1 这种格式")])]),t._v(" "),n("li",[n("p",[t._v("postrotate：执行命令的开始标志")])]),t._v(" "),n("li",[n("p",[t._v("endscripthttp:执行命令的结束标志")])]),t._v(" "),n("li",[n("p",[t._v("if 判断的意思不是中止Nginx的进程，而是传递给它信号重新生成日志，如果nginx没启动不做操作")])]),t._v(" "),n("li",[n("p",[t._v("更多参数可以看："),n("a",{attrs:{href:"http://www.cnblogs.com/zengkefu/p/5498324.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.cnblogs.com/zengkefu/p/5498324.html"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[t._v("手动执行测试："),n("code",[t._v("/usr/sbin/logrotate -vf /etc/logrotate.d/nginx")])])]),t._v(" "),n("li",[n("p",[t._v("参数：‘-f’选项来强制logrotate轮循日志文件，‘-v’参数提供了详细的输出。")])]),t._v(" "),n("li",[n("p",[t._v("验证是否手动执行成功，查看 cron 的日志即可："),n("code",[t._v("grep logrotate /var/log/cron")])])]),t._v(" "),n("li",[n("p",[t._v("设置 crontab 定时任务："),n("code",[t._v("vim /etc/crontab")]),t._v("，添加下面内容：")])])]),t._v(" "),n("div",{staticClass:"language-ini extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[t._v("//每天02点10分执行一次\n10 02 * * *  /usr/sbin/logrotate -f /etc/logrotate.d/nginx\n")])])]),n("h3",{attrs:{id:"杂七杂八"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#杂七杂八"}},[t._v("#")]),t._v(" 杂七杂八")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.ttlsa.com/nginx/nginx-modules-ngx_set_cconv/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx实现简体繁体字互转以及中文转拼音"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.ttlsa.com/nginx/nginx-modules-ngx_http_log_request_speed/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx记录分析网站响应慢的请求(ngx_http_log_request_speed)"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.ttlsa.com/nginx/nginx-modules-empty_gif/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx空白图片(empty_gif模块)"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://help.aliyun.com/knowledge_detail/5974693.html?spm=5176.788314853.2.18.s4z1ra",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://help.aliyun.com/knowledge_detail/5974693.html?spm=5176.788314853.2.18.s4z1ra"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://www.ydcss.com/archives/466",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ydcss.com/archives/466"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://blog.sae.sina.com.cn/archives/2107",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://blog.sae.sina.com.cn/archives/2107"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://www.nginx.cn/273.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.nginx.cn/273.html"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://printfabcd.iteye.com/blog/1200382",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://printfabcd.iteye.com/blog/1200382"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=a.exports}}]);
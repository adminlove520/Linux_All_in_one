(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{383:function(e,t,s){"use strict";s.r(t);var r=s(9),o=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes-部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-部署"}},[e._v("#")]),e._v(" Kubernetes 部署")]),e._v(" "),t("h2",{attrs:{id:"环境说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境说明"}},[e._v("#")]),e._v(" 环境说明")]),e._v(" "),t("ul",[t("li",[e._v("CentOS 7.4")]),e._v(" "),t("li",[e._v("购买自阿里云普通的 ECS 华南地区（如果你是购买美国地区的服务器，则直接使用 kubespray 原项目，那些镜像地址不用修改，其他照着文档即可）")]),e._v(" "),t("li",[e._v("所有机子都是干净的不需要先安装 Docker 等其他容器相关的东西")]),e._v(" "),t("li",[e._v("建议还是用美国服务器，不然各种网络的坑")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("机器简称")]),e._v(" "),t("th",[e._v("内网 IP 地址")]),e._v(" "),t("th",[e._v("部署软件")]),e._v(" "),t("th",[e._v("系统环境")]),e._v(" "),t("th",[e._v("硬件配置")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("操作机")]),e._v(" "),t("td",[e._v("172.20.229.224")]),e._v(" "),t("td",[e._v("ansible")]),e._v(" "),t("td",[e._v("CentOS 7.4")]),e._v(" "),t("td",[e._v("1 vCPU + 2 GB")])]),e._v(" "),t("tr",[t("td",[e._v("node1")]),e._v(" "),t("td",[e._v("172.20.229.225")]),e._v(" "),t("td",[e._v("master")]),e._v(" "),t("td",[e._v("CentOS 7.4")]),e._v(" "),t("td",[e._v("1 vCPU + 4 GB")])]),e._v(" "),t("tr",[t("td",[e._v("node2")]),e._v(" "),t("td",[e._v("172.20.229.226")]),e._v(" "),t("td",[e._v("worker")]),e._v(" "),t("td",[e._v("CentOS 7.4")]),e._v(" "),t("td",[e._v("1 vCPU + 4 GB")])]),e._v(" "),t("tr",[t("td",[e._v("node3")]),e._v(" "),t("td",[e._v("172.20.229.227")]),e._v(" "),t("td",[e._v("worker")]),e._v(" "),t("td",[e._v("CentOS 7.4")]),e._v(" "),t("td",[e._v("1 vCPU + 4 GB")])])])]),e._v(" "),t("h2",{attrs:{id:"所有机子都需要的环境准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#所有机子都需要的环境准备"}},[e._v("#")]),e._v(" 所有机子都需要的环境准备")]),e._v(" "),t("ul",[t("li",[e._v("关闭 SELinux\n"),t("ul",[t("li",[e._v("编辑配置文件："),t("code",[e._v("vim /etc/selinux/config")])]),e._v(" "),t("li",[e._v("把 "),t("code",[e._v("SELINUX=enforcing")]),e._v(" 改为 "),t("code",[e._v("SELINUX=disabled")])])])])]),e._v(" "),t("p",[e._v("所有节点关闭防火墙："),t("code",[e._v("systemctl stop firewalld && systemctl disable firewalld")])]),e._v(" "),t("p",[e._v("安装自己常用的一些组件（非必须）：vim zsh zip unzip lrzsz git")]),e._v(" "),t("h2",{attrs:{id:"安装过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装过程"}},[e._v("#")]),e._v(" 安装过程")]),e._v(" "),t("h4",{attrs:{id:"操作机安装-ansible"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#操作机安装-ansible"}},[e._v("#")]),e._v(" 操作机安装 ansible")]),e._v(" "),t("h1",{attrs:{id:"yum-install-y-epel-releaseyum-install-y-python34-python34-pip-python-pip-python-netaddr-ansible-gitpip-install-upgrade-jinja2yum-install-y-gcc-libffi-devel-python-devel-openssl-devel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yum-install-y-epel-releaseyum-install-y-python34-python34-pip-python-pip-python-netaddr-ansible-gitpip-install-upgrade-jinja2yum-install-y-gcc-libffi-devel-python-devel-openssl-devel"}},[e._v("#")]),e._v(" =================================\nyum install -y epel-release\nyum install -y python34 python34-pip python-pip python-netaddr ansible git\npip install --upgrade Jinja2\nyum install -y gcc libffi-devel python-devel openssl-devel")]),e._v(" "),t("p",[e._v("操作机免密码登录到其他节点")]),e._v(" "),t("p",[e._v("如果还不懂可以具体看我的这篇文章："),t("a",{attrs:{href:""}}),e._v("\nssh-keygen\nssh-copy-id -i /root/.ssh/id_rsa.pub -p 22 root@172.20.229.225\nssh-copy-id -i /root/.ssh/id_rsa.pub -p 22 root@172.20.229.226\nssh-copy-id -i /root/.ssh/id_rsa.pub -p 22 root@172.20.229.227")]),e._v(" "),t("p",[e._v("测试下是否可以免登陆：\nssh -p 22 root@172.20.229.225\nssh -p 22 root@172.20.229.226\nssh -p 22 root@172.20.229.227")]),e._v(" "),t("h4",{attrs:{id:"修改-kubespray-项目配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改-kubespray-项目配置"}},[e._v("#")]),e._v(" 修改 kubespray 项目配置")]),e._v(" "),t("ul",[t("li",[e._v("kubespray 项目官网："),t("a",{attrs:{href:"https://github.com/kubernetes-incubator/kubespray",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/kubernetes-incubator/kubespray"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("在本地机子上")]),e._v(" "),t("p",[e._v("git clone https://github.com/kubernetes-incubator/kubespray.git")]),e._v(" "),t("p",[e._v("当前时间（2018-02）最新版本是：v2.4.0，所以我 checkout v2.4.0 的 tag")]),e._v(" "),t("p",[e._v("用 IntelliJ IDEA 打开该项目，然后批量替换：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("gcr.io/")]),e._v(" 替换成："),t("code",[e._v("registry.cn-hangzhou.aliyuncs.com/")])]),e._v(" "),t("li",[e._v("因为 gcr.io 这个网站的本地址是：https://cloud.google.com/container-registry/，国内的环境当然就没资格上了，所以才要替换。")]),e._v(" "),t("li",[e._v("但是需要注意的是，官网的这些镜像阿里云不一定有，所以稳妥点，你最好可以去阿里云检查下的："),t("a",{attrs:{href:"https://dev.aliyun.com/search.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://dev.aliyun.com/search.html"),t("OutboundLink")],1),e._v("，或者是："),t("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://hub.docker.com/"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("======================================================")]),e._v(" "),t("p",[e._v("cd /opt/kubespray && cp -rfp inventory/sample inventory/mycluster")]),e._v(" "),t("p",[e._v("修改：inventory/mycluster/hosts.ini\npython3 contrib/inventory_builder/inventory.py 172.20.229.225 172.20.229.226 172.20.229.227")]),e._v(" "),t("h1",{attrs:{id:"review-and-change-parameters-under-inventory-mycluster-group-vars"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#review-and-change-parameters-under-inventory-mycluster-group-vars"}},[e._v("#")]),e._v(" Review and change parameters under "),t("code",[e._v("inventory/mycluster/group_vars")])]),e._v(" "),t("p",[e._v("cat inventory/mycluster/group_vars/all.yml\ncat inventory/mycluster/group_vars/k8s-cluster.yml")]),e._v(" "),t("p",[e._v("修改 /kubespray/inventory/mycluster/hosts.ini，改为如下内容：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("node1 ansible_ssh_host=172.20.229.225 ansible_user=root ip=172.20.229.225\nnode2 ansible_ssh_host=172.20.229.226 ansible_user=root ip=172.20.229.226\nnode3 ansible_ssh_host=172.20.229.227 ansible_user=root ip=172.20.229.227\n\n[kube-master]\nnode1\n\n[etcd]\nnode1\n\n[kube-node]\nnode2\nnode3\n\n[k8s-cluster:children]\nkube-node\nkube-master\n")])])]),t("p",[e._v("然后把这个项目压缩成 zip 上传到操作机的 /opt 根目录上，然后解压。")]),e._v(" "),t("p",[e._v("然后在操作机上执行："),t("code",[e._v("cd /opt/kubespray && ansible-playbook -i inventory/mycluster/hosts.ini cluster.yml")]),e._v("\n然后会开始输出一大堆执行任务的东西，等等吧，预计需要 20~60 分钟左右。")]),e._v(" "),t("p",[e._v("然后报错：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('Thursday 08 February 2018  18:03:14 +0800 (0:00:00.038)       0:04:14.420 ***** \nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (4 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (4 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (4 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (3 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (3 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (3 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (2 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (2 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (2 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (1 retries left).\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (1 retries left).\nfatal: [node1]: FAILED! => {"attempts": 4, "changed": true, "cmd": ["/usr/bin/docker", "pull", "registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64:1.1.2"], "delta": "0:00:00.413852", "end": "2018-02-08 18:03:38.396245", "msg": "non-zero return code", "rc": 1, "start": "2018-02-08 18:03:37.982393", "stderr": "Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access", "stderr_lines": ["Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access"], "stdout": "", "stdout_lines": []}\nFAILED - RETRYING: container_download | Download containers if pull is required or told to always pull (all nodes) (1 retries left).\nfatal: [node3]: FAILED! => {"attempts": 4, "changed": true, "cmd": ["/usr/bin/docker", "pull", "registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64:1.1.2"], "delta": "0:00:00.421977", "end": "2018-02-08 18:03:42.334875", "msg": "non-zero return code", "rc": 1, "start": "2018-02-08 18:03:41.912898", "stderr": "Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access", "stderr_lines": ["Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access"], "stdout": "", "stdout_lines": []}\nfatal: [node2]: FAILED! => {"attempts": 4, "changed": true, "cmd": ["/usr/bin/docker", "pull", "registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64:1.1.2"], "delta": "0:00:00.390301", "end": "2018-02-08 18:03:46.246213", "msg": "non-zero return code", "rc": 1, "start": "2018-02-08 18:03:45.855912", "stderr": "Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access", "stderr_lines": ["Error response from daemon: repository registry.cn-hangzhou.aliyuncs.com/google_containers/cluster-proportional-autoscaler-amd64 not found: does not exist or no pull access"], "stdout": "", "stdout_lines": []}\n')])])]),t("p",[e._v("说明这个镜像在阿里云没有，所以我有在 docker 官网找了下，有一个这个："),t("code",[e._v("mirrorgooglecontainers/cluster-proportional-autoscaler-amd64")])]),e._v(" "),t("p",[e._v("建议你可以找个有 docker 的服务器试一下："),t("code",[e._v("docker pull mirrorgooglecontainers/cluster-proportional-autoscaler-amd64")]),e._v("，如果能下载，那就说明没问题了。\n同时也发现这个 docker hub 用户是北京的，应该同道。")]),e._v(" "),t("p",[e._v("然后又报了下面这个错误。主要是这个脚本：/usr/local/bin/etcd-scripts/make-ssl-etcd.sh 有这个错误：$'\\r': command not found\n而这个脚本是来自操作机上的 /opt/kubespray/roles/etcd/files 目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('fatal: [node1 -> 172.20.229.225]: FAILED! => {"changed": true, "cmd": ["bash", "-x", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "-f", "/etc/ssl/etcd/openssl.conf", "-d", "/etc/ssl/etcd/ssl"], "delta": "0:00:00.012822", "end": "2018-02-08 18:42:09.815776", "msg": "non-zero return code", "rc": 2, "start": "2018-02-08 18:42:09.802954", "stderr": "+ $\'\\\\r\'\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 2: $\'\\\\r\': command not found\\n+ $\'\\\\r\'\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 16: $\'\\\\r\': command not found\\n+ set -o $\'errexit\\\\r\'\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 17: set: errexit\\r: invalid option name\\n+ set -o $\'pipefail\\\\r\'\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 18: set: pipefail\\r: invalid option name\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: syntax error near unexpected token `$\'\\\\r\'\'\\n/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: `usage()\\r\'", "stderr_lines": ["+ $\'\\\\r\'", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 2: $\'\\\\r\': command not found", "+ $\'\\\\r\'", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 16: $\'\\\\r\': command not found", "+ set -o $\'errexit\\\\r\'", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 17: set: errexit", ": invalid option name", "+ set -o $\'pipefail\\\\r\'", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 18: set: pipefail", ": invalid option name", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: syntax error near unexpected token `$\'\\\\r\'\'", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh: line 19: `usage()", "\'"], "stdout": "", "stdout_lines": []}\n')])])]),t("p",[e._v("我们需要操作这个机节点做这样的操作：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("yum install -y dos2unix unix2dos\n\ncd /opt/kubespray/roles/etcd/files && dos2unix make-ssl-etcd.sh\ncd /opt/kubespray/roles/kubernetes/secrets/files && dos2unix make-ssl.sh\n")])])]),t("h4",{attrs:{id:"验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[e._v("#")]),e._v(" 验证")]),e._v(" "),t("p",[e._v("SSH 连上 master 节点：ssh root@172.20.229.225\n输入："),t("code",[e._v("kubectl get nodes")])]),e._v(" "),t("p",[e._v("展示出如下信息：\nNAME      STATUS                     AGE       VERSION\nnode1     Ready,SchedulingDisabled   1m        v1.6.1+coreos.0\nnode2     Ready                      1m        v1.6.1+coreos.0\nnode3     Ready                      1m        v1.6.1+coreos.0")]),e._v(" "),t("h2",{attrs:{id:"资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[e._v("#")]),e._v(" 资料")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.wisely.top/2017/05/16/kargo-ansible-kubernetes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.wisely.top/2017/05/16/kargo-ansible-kubernetes/"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wiselyman/kubespray",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/wiselyman/kubespray"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("<>\n======================================================")])]),e._v(" "),t("p",[e._v("安装bzip2软件")]),e._v(" "),t("p",[e._v("yum install -y bzip2")]),e._v(" "),t("p",[e._v("tar -xjvf k8s_images.tar.bz2")]),e._v(" "),t("p",[e._v("设置 hostname")]),e._v(" "),t("p",[e._v("hostnamectl --static set-hostname  k8s-master")]),e._v(" "),t("p",[e._v("hostnamectl --static set-hostname  k8s-node-1")]),e._v(" "),t("p",[e._v("在master和slave的/etc/hosts文件中均加入以下内容：")]),e._v(" "),t("p",[e._v("172.18.218.96   k8s-master\n172.18.218.96   etcd\n172.18.218.96   registry\n172.18.218.97   k8s-node-1")])])}),[],!1,null,null,null);t.default=o.exports}}]);